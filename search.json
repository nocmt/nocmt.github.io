[{"title":"程序员不应该用简书！","url":"/posts/005/","content":"\n简书的优点：程序员还是挺多的，写的教程质量总体比较好，排版还算OK，编写文章体验不错。\n\n缺点：首页一堆垃圾文章，广告也多，写的文章有可能被锁定，数据可以一键导出，但图片默认压缩，不自由。\n\n终究还是 **数据只有放在自己硬盘才是最安全的**\n\n使用简书5年了，发了82篇文章，分享些好的效率软件或者技巧总是会被当成软文锁定！还是会在简书更新一些内容，但主要还是发博客吧。\n\n![被锁定的文章](2.png)\n\n附录：\n\n![辱骂程序员的文章却不受限制](3.jpg)","tags":["写作"],"categories":["日常闲聊"]},{"title":"极大提高工作效率，强大的Chrome浏览器扩展插件 -- Omni","url":"/posts/004/","content":"\n突然发现一个有趣的浏览器插件，简单试用了一下，非常好用。\n\n下载地址：\n\nGitHub：[https://github.com/alyssaxuu/omni](https://github.com/alyssaxuu/omni)\nChrome 插件地址：[点击跳转](https://chrome.google.com/webstore/detail/omni-bookmark-history-tab/mapjgeachilmcbbokkgcbgpbakaaeehi?hl=en&authuser=0)\nFirefox 的插件地址：[点击跳转](https://addons.mozilla.org/en-GB/firefox/addon/omnisearch/)\n\n它可以解决的问题：在浏览器中快速搜索到您想要的内容，包括但不限于已打开的标签、书签、历史记录。\n\n远比浏览器自带的搜索框功能强大，搜索速度非常快，简单易上手。\n\n![官方演示](2.gif)\n\n以下是它所有的功能：\n\n- 切换、打开、关闭和搜索标签：安装后使用 `⌘+Shift+K 或者 Ctrl+Shift+K` 快捷键打开搜索框，直接输入文字就能搜索到内容，上下键切换选项回车或者鼠标点击就可执行动作\n- 浏览和管理书签：输入 /b 自动补全 /bookmarks ，然后输入内容即可。\n- 搜索浏览的历史记录：输入 /h 自动补全 /history ，然后输入内容即可。\n- 50 多项提高生产力的措施：输入 /a 自动补全 /actions ，然后输入内容即可。\n- 用于过滤和执行更多操作的特殊命令\n- 与 Notion、Figma、Docs、Asana 的集成......\n- 静音、固定、书签等操作的快捷方式...\n- 有助于解决浏览问题的高级设置\n- 切换黑暗模式\n\n以上功能全部免费无需登录配置，开箱即用。\n\n其中高级设置就是一些浏览器支持的功能，都放在里面，方便搜索使用。\n\n- 录屏\n- 打印页面\n- 返回上一页\n- 前往下一页\n- 打开下载页面\n- 重新加载页面\n- 打开浏览器设置\n- 复制当前页面\n- 关闭浏览器\n- 清除缓存\n- 清除 Cookie\n- 清除浏览历史\n- 清空已保存的密码\n- 滚动到页面底部、顶部\n...\n\n快去试试吧！","tags":["Chrome"],"categories":["技术教程"]},{"title":"树莓派3B+ 安装 OpenWrt 的简单配置记录","url":"/posts/001/","content":"\n### 一、下载镜像\n\n定制固件下载地址：https://doc.openwrt.cc/2-OpenWrt-Rpi/1-Download/\n\n作者项目地址：https://github.com/SuLingGG/OpenWrt-Rpi\n\n像我的型号是 3B+，那就下载 `immortalwrt-bcm27xx-bcm2710-rpi-3-squashfs-sysupgrade.img.gz`\n\n然后解压（像 Mac 的解压命令：`gunzip immortalwrt-bcm27xx-bcm2710-rpi-3-squashfs-sysupgrade.img.gz` ）\n\n![固件下载页面](1.png)\n\n### 二、刷写固件\n\n下载 [BalenaEtcher](https://www.balena.io/etcher/)，安装，然后插上 TF 卡转接器，它会自动检测到 USB 设备，点击 Flash，输入当前电脑登录密码就可以了。\n\n![刷写固件](2.png)\n\n刷写完成后，弹出\"U 盘\"，取下 TF 卡，装到树莓派中，通电等待 30 秒（不要插网线）。\n\n### 三、默认 LAN 口改 WAN 口\n\n等待 30 秒后，使用你的电脑连接上一个名称为 OpenWrt 的 WIFI，不需要密码。\n\n连接成功后，浏览器访问：[http://192.168.1.1](http://192.168.1.1/)\n\n即可进入 web 控制面板，默认登录账号：`root`，密码：`password`。\n\n![主页面](3.png)\n\n在 网络 -> 接口总览 可以看到有个默认的 `LAN` 网络，点击右侧修改，可以改成以下的内容（如果你理解就可以修改成其他的）：\n\n![基本设置](4.png)\n\n然后点击 `高级设置` ，取消勾选 `以太网适配器: \"eth0\"`，点击保存与应用。\n\n![高级设置](5.png)\n\n等待刷新，这时候可以重新连接 WIFI，然后 访问 [http://192.168.0.101/](http://192.168.0.101/)，如果顺利的话，你会重新进入到管理页面。\n\n然后在 网络 -> 接口总览 中新增一个接口，配置内容如下：\n\n![新增网口](6.png)\n\n点击保存，插上网线，然后在系统 -> 重启，点击 `执行重启`，等待重启完成，配置就完成。\n\n至于 WIFI 的密码设置，您可以在 网络-> 无线中设置，那些都很简单，请多多尝试。\n\n**备注：如果你的有线网络的 IP 网段是 http://192.168.1.1-255 可能存在连接问题，请改一下网段。**\n","tags":["树莓派","OpenWrt","软路由"],"categories":["技术教程"]},{"title":"Gunicorn+Caddy 部署Django网站","url":"/posts/003/","content":"\n**必读说明：**\n- 项目：term\n- 环境：vcmt\n- 系统：Debian 9\n- 工具：PuTTY、FileZilla\n\n开放22、80、443或者你需要的其他端口\n\n连接上服务器，Linux操作，更新系统（可选）：\n\n    sudo apt-get update\n    sudo apt-get dist-upgrade\n\n安装Miniconda：\n\n    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && chmod +x Miniconda3-latest-Linux-x86_64.sh && bash Miniconda3-latest-Linux-x86_64.sh\n\n备注：关于Anconda的使用：[https://mubu.com/doc/bwPIqW1ln](https://mubu.com/doc/bwPIqW1ln)\n\n配置环境变量：\n\n   export PATH=$PATH:/root/miniconda3/bin\n   # source ~/.bashrc\n\n更新所有包：\n\n    conda upgrade --all\n\n创建环境：\n\n    conda create -n vcmt\n备注：此处环境名为 vcmt，默认保存的位置： /root/miniconda3/envs/vcmt\n\n进入环境：\n\n    source activate vcmt\n    // 离开环境命令：source deactivate\n\n此时可以使用FileZilla把项目文件上传到服务器下，目录建议选 home，因为放在别的目录可能有权限问题。\n\n目前我的位置\n\n![Gunicorn+Caddy部署Django网站](2.png)\n\n由于以前开发项目时没有使用Anconda，所以只能用pip生成环境依赖了，命令如下：\n\n生成requirements.txt文件\n\n    pip freeze > requirements.txt\n\n安装requirements.txt依赖\n\n    pip install -r requirements.txt\n\n在线运行一下，看会不会报错\n\n\n    python manage.py runserver 0.0.0.0:80\n\n少依赖会提示的，安装好就行，如果报别的错，就去解决错误，善用vim\n\n没问题 Ctrl+C关闭项目\n\n正式部署时，Debug要关掉\n\n![Debug](3.png)\n\n同步静态文件：\n\n    python manage.py collectstatic\n\n先退到 home目录\n\n    cd ..\n\n下载安装caddy\n\n    wget -c \"https://caddyserver.com/download/linux/amd64?license=personal&telemetry=off\" -O caddy.tar.gz\n\n创建caddy文件夹并解压到指定目录：\n\n    mkdir caddy\n    tar -zxvf caddy.tar.gz -C caddy\n    chmod -R u+x caddy\n\n在caddy里创建Caddyfile文件：\n\n    vim /caddy/Caddyfile\n\n内容：\n```TXT\n域名{\n        root /home/term\n        proxy / localhost:8001 {\n            transparent\n            except /static /media\n        }\n    }\n```\n备注：配置文件有很多种写法 -- [https://caddyserver.com/docs/http-caddyfile](https://caddyserver.com/docs/http-caddyfile)\n\n安装 Gunicorn：\n\n    pip install gunicorn\n\n此处可启动检验（此时当前路径为/home/term，term为项目名称）：\n\n    // 不在vcmt环境里\n    /root/miniconda3/bin/gunicorn -w 2 -b \"127.0.0.1:8001\" term.wsgi\n    // 在vcmt环境里\n    gunicorn -w 2 -b \"127.0.0.1:8001\" term.wsgi\n\n关于gunicorn的启动参数 -- [http://docs.gunicorn.org/en/stable/](http://docs.gunicorn.org/en/stable/)\n\n启动以后，我们会发现它在前台，所以安装supervisor，用来管理进程：\n\n    apt-get install supervisor\n\n添加supervisor配置文件\n\n    vim /etc/supervisor/conf.d/gun.conf\n\n内容：\n```Config\n# gun为名称\n[program:gun]\n\ndirectory= /home/term/ # 切换路径\n# 感觉不需要，如果启动不了，再改一下吧\n# environment=PATH=/root/miniconda3/envs/vcmt/bin/\ncommand=  /root/miniconda3/envs/vcmt/bin/gunicorn -w 2 -b \"127.0.0.1:8001\" term.wsgi # 启动命令\nautostart=true  # 自动启动\nstartsecs = 10 # 启动超时\nautorestart = true # 自动重启\nstartretries=3 # 重启次数\nuser=root # 用户\nstderr_logfile=/home/gun_err.log # 错误日志\nstdout_logfile=/home/gun_out.log # 普通日志\n```\n\n同理，caddy的配置：\n```Config\n[program:caddy]\n\ncommand= /home/caddy/caddy -conf=\"/home/caddy/Caddyfile\"\nautostart=true\nstartsecs = 10\nautorestart = true\nstartretries=3\nuser=root\nstderr_logfile=/home/caddy_err.log\nstdout_logfile=/home/caddy_out.log\n```\n\n启动 Gunicorn和Caddy：\n\n    supervisorctl update\n    supervisorctl\n\n报错会有提示，下面这样就是正常的\n\n![正常运行](4.png)\n\n在这个交互环境下，可以start 、restart、stop 配置名，退出使用quit","tags":["Django"],"categories":["Django教程"]},{"title":"Mycli 安装及简单使用教程","url":"/posts/002/","content":"\nmycli 是 MySQL，MariaDB 和 Percona 的命令行界面，具有自动完成和语法高亮功能。\n\n相信看了下面这张图，就足以使你动心，迫不及待就想使用它了。\n\n![演示图](1.gif)\n\n---\n\n### 一、安装 Mycli\n\n如果你安装了**Python**，那么安装它是十分简单的，首先以管理员权限打开你的**CMD**（即命令行工具），输入以下命令：\n\n    pip install mycli\n\n### 二. 启动 Mycli\n\n使用 Mycli 连接 Mysql 数据库的方法很简单，和 Mysql 命令启动基本相同。\n\n在命令行启动数据库，输入：\n\n    net start mysql\n\n然后连接数据库，输入：\n\n    mycli -u用户名 -p密码\n\n连接成功，输入几行 Mysql 命令试试，应该就会有提示了，上下键选择，回车确定。\n","tags":["MySQL"],"categories":["技术教程"]}]